@page "/admin/forumposts"
@layout LMS.Components.Layout.AdminLayout
@using Microsoft.AspNetCore.Components.QuickGrid
@using LMS.Services
@inject IForumService ForumService

<PageTitle>Forum Posts - Admin</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">Forum Posts</h1>
    <a href="/admin/forumposts/create" class="btn btn-primary">
        <i class="bi bi-plus-circle me-2"></i>Add New Forum Post
    </a>
</div>

<div class="card">
    <div class="card-body">
        @if (paginatedResult != null)
        {
            <PaginationComponent TItem="ForumPostModel" CurrentPage="@currentPage" PageSize="@pageSize"
                TotalCount="@paginatedResult.TotalCount" TotalPages="@paginatedResult.TotalPages"
                OnPageChanged="OnPageChanged" OnPageSizeChanged="OnPageSizeChanged" />

            @if (paginatedResult.Items.Any())
            {
                <QuickGrid Class="table table-striped table-hover" Items="paginatedResult.Items.AsQueryable()">
                    <PropertyColumn Property="forumpost => forumpost.Content" Title="Content" />
                    <PropertyColumn Property="forumpost => forumpost.TopicTitle" Title="Topic" />
                    <PropertyColumn Property="forumpost => forumpost.AuthorName" Title="Author" />
                    <PropertyColumn Property="forumpost => forumpost.ParentPostId" Title="Parent Post" />
                    <PropertyColumn Property="forumpost => forumpost.CreatedAt" Title="Created" Format="yyyy-MM-dd HH:mm" />

                    <TemplateColumn Title="Actions" Context="forumpost">
                        <div class="btn-group" role="group">
                            <a href="@($"/admin/forumposts/edit?id={forumpost.Id}")" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a href="@($"/admin/forumposts/details?id={forumpost.Id}")" class="btn btn-sm btn-outline-info">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            <a href="@($"/admin/forumposts/delete?id={forumpost.Id}")" class="btn btn-sm btn-outline-danger">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </TemplateColumn>
                </QuickGrid>
            }
            else
            {
                <div class="text-center py-4">
                    <p class="text-muted">No forum posts found.</p>
                </div>
            }
        }
        else
        {
            <div class="text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private PaginatedResult<ForumPostModel>? paginatedResult;
    private int currentPage = 1;
    private int pageSize = 10;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        isLoading = true;
        try
        {
            var request = new PaginationRequest
            {
                PageNumber = currentPage,
                PageSize = pageSize
            };

            paginatedResult = await ForumService.GetAllForumPostsPaginatedAsync(request);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task OnPageChanged(int page)
    {
        if (page != currentPage && !isLoading)
        {
            currentPage = page;
            await LoadDataAsync();
        }
    }

    private async Task OnPageSizeChanged(int newPageSize)
    {
        if (newPageSize != pageSize && !isLoading)
        {
            pageSize = newPageSize;
            currentPage = 1; // Reset to first page when changing page size
            await LoadDataAsync();
        }
    }
}
