@page "/forumposts/create"
@using Microsoft.EntityFrameworkCore
@using LMS.Data
@inject IDbContextFactory<LMS.Data.AuthDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>ForumPost</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ForumPost" OnValidSubmit="AddForumPost" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="content" class="form-label">Content:</label> 
                <InputText id="content" @bind-Value="ForumPost.Content" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => ForumPost.Content" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="topicid" class="form-label">TopicId:</label> 
                <InputNumber id="topicid" @bind-Value="ForumPost.TopicId" class="form-control" /> 
                <ValidationMessage For="() => ForumPost.TopicId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="authorid" class="form-label">AuthorId:</label> 
                <InputText id="authorid" @bind-Value="ForumPost.AuthorId" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => ForumPost.AuthorId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="parentpostid" class="form-label">ParentPostId:</label> 
                <InputNumber id="parentpostid" @bind-Value="ForumPost.ParentPostId" class="form-control" /> 
                <ValidationMessage For="() => ForumPost.ParentPostId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdat" class="form-label">CreatedAt:</label> 
                <InputDate id="createdat" @bind-Value="ForumPost.CreatedAt" class="form-control" /> 
                <ValidationMessage For="() => ForumPost.CreatedAt" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="updatedat" class="form-label">UpdatedAt:</label> 
                <InputDate id="updatedat" @bind-Value="ForumPost.UpdatedAt" class="form-control" /> 
                <ValidationMessage For="() => ForumPost.UpdatedAt" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isdeleted" class="form-label">IsDeleted:</label> 
                <InputCheckbox id="isdeleted" @bind-Value="ForumPost.IsDeleted" class="form-check-input" /> 
                <ValidationMessage For="() => ForumPost.IsDeleted" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/forumposts">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ForumPost ForumPost { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddForumPost()
    {
        using var context = DbFactory.CreateDbContext();
        context.ForumPosts.Add(ForumPost);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/forumposts");
    }
}
