@page "/forumposts/delete"
@using Microsoft.EntityFrameworkCore
@using LMS.Data
@inject IDbContextFactory<LMS.Data.AuthDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>ForumPost</h2>
    <hr />
    @if (forumpost is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Content</dt>
            <dd class="col-sm-10">@forumpost.Content</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TopicId</dt>
            <dd class="col-sm-10">@forumpost.TopicId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AuthorId</dt>
            <dd class="col-sm-10">@forumpost.AuthorId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ParentPostId</dt>
            <dd class="col-sm-10">@forumpost.ParentPostId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedAt</dt>
            <dd class="col-sm-10">@forumpost.CreatedAt</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedAt</dt>
            <dd class="col-sm-10">@forumpost.UpdatedAt</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsDeleted</dt>
            <dd class="col-sm-10">@forumpost.IsDeleted</dd>
        </dl>
        <EditForm method="post" Model="forumpost" OnValidSubmit="DeleteForumPost" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(forumpost is null)">Delete</button> |
            <a href="/forumposts">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private ForumPost? forumpost;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        forumpost = await context.ForumPosts.FirstOrDefaultAsync(m => m.Id == Id);

        if (forumpost is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteForumPost()
    {
        using var context = DbFactory.CreateDbContext();
        context.ForumPosts.Remove(forumpost!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/forumposts");
    }
}
