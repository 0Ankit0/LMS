@page "/announcements/details"
@using Microsoft.EntityFrameworkCore
@using LMS.Data
@inject IDbContextFactory<LMS.Data.AuthDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Announcement</h2>
    <hr />
    @if (announcement is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@announcement.Title</dd>
            <dt class="col-sm-2">Content</dt>
            <dd class="col-sm-10">@announcement.Content</dd>
            <dt class="col-sm-2">AuthorId</dt>
            <dd class="col-sm-10">@announcement.AuthorId</dd>
            <dt class="col-sm-2">CourseId</dt>
            <dd class="col-sm-10">@announcement.CourseId</dd>
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@announcement.Type</dd>
            <dt class="col-sm-2">Priority</dt>
            <dd class="col-sm-10">@announcement.Priority</dd>
            <dt class="col-sm-2">PublishedAt</dt>
            <dd class="col-sm-10">@announcement.PublishedAt</dd>
            <dt class="col-sm-2">ExpiresAt</dt>
            <dd class="col-sm-10">@announcement.ExpiresAt</dd>
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@announcement.IsActive</dd>
            <dt class="col-sm-2">SendEmail</dt>
            <dd class="col-sm-10">@announcement.SendEmail</dd>
            <dt class="col-sm-2">SendSms</dt>
            <dd class="col-sm-10">@announcement.SendSms</dd>
        </dl>
        <div>
            <a href="@($"/announcements/edit?id={announcement.Id}")">Edit</a> |
            <a href="@($"/announcements")">Back to List</a>
        </div>
    }
</div>

@code {
    private Announcement? announcement;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        announcement = await context.Announcements.FirstOrDefaultAsync(m => m.Id == Id);

        if (announcement is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
