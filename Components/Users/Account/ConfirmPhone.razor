@page "/user/account/confirmphone"
@layout AuthLayout
@inject NavigationManager NavigationManager
@inject UserManager<User> UserManager

<h1>Confirm Phone</h1>

<p>Please enter the code sent to your phone:</p>
<div class="form-floating mb-3">
    <InputText @bind-Value="code" class="form-control" autocomplete="000000" aria-required="true"
        placeholder="Please enter the Code." />
    <label class="form-label">Enter Code</label>
</div>
<button @onclick="ConfirmCode" class="btn btn-lg btn-primary">Confirm</button>

@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert alert-info">@statusMessage</div>
}

@code {
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;
    [Parameter, SupplyParameterFromQuery]
    public string PhoneNo { get; set; } = string.Empty;
    private string code = string.Empty;
    private string? statusMessage;

    private async Task ConfirmCode()
    {
        if (string.IsNullOrWhiteSpace(code))
        {
            statusMessage = "Please enter a code.";
            return;
        }
        var user = (await AuthenticationStateTask).User;
        if (!user.Identity.IsAuthenticated)
        {
            statusMessage = "You must be logged in to confirm your phone.";
            return;
        }
        var identityUser = await UserManager.GetUserAsync(user);
        if (identityUser == null)
        {
            statusMessage = "Unable to load user.";
            return;
        }

        var result = await UserManager.ChangePhoneNumberAsync(identityUser, PhoneNo, code);

        if (result.Succeeded)
        {
            statusMessage = "Phone number confirmed successfully.";
            NavigationManager.NavigateTo("/user/account/manage/profile");
        }
        else
        {
            statusMessage = "Invalid confirmation code. Please try again.";
        }
    }
}
