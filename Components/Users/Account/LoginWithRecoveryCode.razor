@page "/user/account/loginwithrecoverycode"
@layout AuthLayout
@inject NavigationManager NavigationManager

<h1>Recovery code verification</h1>
<hr />
<p>
    You have requested to log in with a recovery code. This login will not be remembered until you provide
    an authenticator app code at log in or disable 2FA and log in again.
</p>
<form method="post" action="/api/user/account/loginwithrecoverycode" autocomplete="off">
    <div class="form-floating mb-3">
        <input name="RecoveryCode" class="form-control" autocomplete="off" placeholder="Recovery code" required />
        <label class="form-label">Recovery code</label>
    </div>
    <input type="hidden" name="ReturnUrl" value="@GetQuery("returnUrl", "/")" />
    <div>
        <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
    </div>
</form>
<p>
    Lost your recovery codes? <a href="/user/account/forgotpassword">Reset your password</a>.
</p>
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert alert-info mt-2">@statusMessage</div>
}

@code {
    private string? statusMessage;

    protected override void OnInitialized()
    {
        // Optionally, display a status message from the query string (e.g., after a failed attempt)
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue("message", out var msg))
        {
            statusMessage = msg;
        }
    }

    private string GetQuery(string key, string defaultValue = "")
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (query.TryGetValue(key, out var value))
        {
            return value;
        }
        return defaultValue;
    }
}