@page "/user/account/registerconfirmation"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using System.Text
@inject UserManager<User> UserManager
@inject NavigationManager NavigationManager

<h1>Register confirmation</h1>
@if (string.IsNullOrEmpty(email))
{
    <p>
        A valid email address must be supplied.
    </p>
}
else if (displayConfirmAccountLink)
{
    <p>
        This app does not currently have a real email sender registered, see <a href="https://aka.ms/aspaccountconf">these
            docs</a> for how to configure a real email sender.
        Normally this would be emailed: <a id="confirm-link" href="@emailConfirmationUrl">Click here to confirm your
            account</a>
    </p>
}
else
{
    <p>
        Please check your email to confirm your account.
    </p>
}

@code {
    private string? email;
    private string? emailConfirmationUrl;
    private bool displayConfirmAccountLink;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("email", out var emailValue))
        {
            email = emailValue;
        }
        else
        {
            email = null;
            return;
        }

        // Always display the confirm account link in dev, as in the original code
        displayConfirmAccountLink = true;

        if (displayConfirmAccountLink)
        {
            var user = await UserManager.FindByEmailAsync(email);
            if (user != null)
            {
                var userId = await UserManager.GetUserIdAsync(user);
                var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
                code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
                var returnUrl = query.TryGetValue("returnUrl", out var r) ? r.ToString() : "/";
                // Build the confirmation URL
                emailConfirmationUrl = NavigationManager.BaseUri.TrimEnd('/') +
                $"/user/account/confirmEmail?userId={Uri.EscapeDataString(userId)}&code={Uri.EscapeDataString(code)}&returnUrl={Uri.EscapeDataString(returnUrl)}";
            }
        }
    }
}
