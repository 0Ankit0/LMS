@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject HttpClient Http
@rendermode InteractiveServer

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand fw-bold text-primary" href="/home" style="font-size:1.3rem; letter-spacing:1px;">LMS</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                @if (isAuthenticated)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                            data-bs-toggle="dropdown">
                            Account
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/user/account/manage">Manage</a></li>
                            <li><a class="dropdown-item" href="/user/account/changepassword">Change Password</a></li>
                            <li><a class="dropdown-item" href="/user/account/externallogins">External Logins</a></li>
                            <li><a class="dropdown-item" href="/user/account/personaldata">Personal Data</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item" href="#" @onclick="LogoutAsync"
                                    @onclick:preventDefault="true">Logout</a></li>
                        </ul>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/user/account/login">Login</NavLink>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }
    private async Task LogoutAsync()
    {
        NavigationManager.NavigateTo("/api/user/account/logout", forceLoad: true);
    }
}
