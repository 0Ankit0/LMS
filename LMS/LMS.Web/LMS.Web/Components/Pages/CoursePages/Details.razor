@page "/courses/details"
@using Microsoft.EntityFrameworkCore
@using LMS.Data.Entities
@inject IDbContextFactory<LMS.Infrastructure.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Course</h2>
    <hr />
    @if (course is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@course.Title</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@course.Description</dd>
            <dt class="col-sm-2">ThumbnailUrl</dt>
            <dd class="col-sm-10">@course.ThumbnailUrl</dd>
            <dt class="col-sm-2">InstructorId</dt>
            <dd class="col-sm-10">@course.InstructorId</dd>
            <dt class="col-sm-2">Level</dt>
            <dd class="col-sm-10">@course.Level</dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@course.Status</dd>
            <dt class="col-sm-2">MaxEnrollments</dt>
            <dd class="col-sm-10">@course.MaxEnrollments</dd>
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@course.StartDate</dd>
            <dt class="col-sm-2">EndDate</dt>
            <dd class="col-sm-10">@course.EndDate</dd>
            <dt class="col-sm-2">EstimatedDuration</dt>
            <dd class="col-sm-10">@course.EstimatedDuration</dd>
            <dt class="col-sm-2">Prerequisites</dt>
            <dd class="col-sm-10">@course.Prerequisites</dd>
            <dt class="col-sm-2">LearningObjectives</dt>
            <dd class="col-sm-10">@course.LearningObjectives</dd>
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@course.IsActive</dd>
            <dt class="col-sm-2">CreatedAt</dt>
            <dd class="col-sm-10">@course.CreatedAt</dd>
            <dt class="col-sm-2">UpdatedAt</dt>
            <dd class="col-sm-10">@course.UpdatedAt</dd>
        </dl>
        <div>
            <a href="@($"/courses/edit?id={course.Id}")">Edit</a> |
            <a href="@($"/courses")">Back to List</a>
        </div>
    }
</div>

@code {
    private Course? course;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        course = await context.Courses.FirstOrDefaultAsync(m => m.Id == Id);

        if (course is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
