@using BlazorBootstrap
@using LMS.Data.DTOs
@using LMS.Data.Entities
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.JSInterop
@using LMS.Repositories
@page "/reports/enrollment-summary"
@inject IReportRepository ReportRepository
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<User> UserManager
@attribute [Authorize]

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">ðŸ‘¥ Enrollment Summary Report</h2>
        <p class="text-muted mb-0">Track enrollment statistics and trends over time</p>
    </div>
    <div class="export-buttons">
        <Button Color="ButtonColor.Danger" Outline="true" @onclick="ExportToPdf">
            <Icon Name="IconName.FilePdf" /> Export PDF
        </Button>
        <Button Color="ButtonColor.Success" Outline="true" @onclick="ExportToExcel">
            <Icon Name="IconName.FileExcel" /> Export Excel
        </Button>
    </div>
</div>

@if (loading)
{
    <div class="text-center py-5">
        <Spinner Color="SpinnerColor.Primary" Size="SpinnerSize.Medium" />
        <p class="mt-2">Loading enrollment data...</p>
    </div>
}
else
{
    <Card>
        <CardBody>
            <h5>Enrollment Summary</h5>
            <p>This report will show enrollment statistics and trends.</p>
        </CardBody>
    </Card>
}

@code {
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000); // Simulate loading
        loading = false;
    }

    private async Task ExportToPdf()
    {
        await Task.CompletedTask; // Stub implementation
    }

    private async Task ExportToExcel()
    {
        await Task.CompletedTask; // Stub implementation
    }
}
