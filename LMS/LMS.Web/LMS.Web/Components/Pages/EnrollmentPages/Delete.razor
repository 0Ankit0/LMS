@page "/enrollments/delete"
@using Microsoft.EntityFrameworkCore
@using LMS.Data.Entities
@inject IDbContextFactory<LMS.Data.Entities.AuthDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Enrollment</h2>
    <hr />
    @if (enrollment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@enrollment.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CourseId</dt>
            <dd class="col-sm-10">@enrollment.CourseId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EnrolledAt</dt>
            <dd class="col-sm-10">@enrollment.EnrolledAt</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StartedAt</dt>
            <dd class="col-sm-10">@enrollment.StartedAt</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CompletedAt</dt>
            <dd class="col-sm-10">@enrollment.CompletedAt</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@enrollment.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ProgressPercentage</dt>
            <dd class="col-sm-10">@enrollment.ProgressPercentage</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TimeSpent</dt>
            <dd class="col-sm-10">@enrollment.TimeSpent</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FinalGrade</dt>
            <dd class="col-sm-10">@enrollment.FinalGrade</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsCertificateIssued</dt>
            <dd class="col-sm-10">@enrollment.IsCertificateIssued</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CertificateIssuedAt</dt>
            <dd class="col-sm-10">@enrollment.CertificateIssuedAt</dd>
        </dl>
        <EditForm method="post" Model="enrollment" OnValidSubmit="DeleteEnrollment" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(enrollment is null)">Delete</button> |
            <a href="/enrollments">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Enrollment? enrollment;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        enrollment = await context.Enrollments.FirstOrDefaultAsync(m => m.Id == Id);

        if (enrollment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteEnrollment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Enrollments.Remove(enrollment!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/enrollments");
    }
}
