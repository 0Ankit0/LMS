@page "/admin/achievements/create"

@using LMS.Repositories
@using LMS.Web.Components.Shared
@using LMS.Web.Services

@inject IAchievementRepository AchievementRepository
@inject NavigationManager NavigationManager
@inject LMS.Web.Services.ToastService ToastService
@rendermode @(new InteractiveServerRenderMode())

<PageTitle>Create Achievement - Admin</PageTitle>

@if (isLoading)
{
    <div class="d-flex justify-content-between align-items-center mb-4">
        <MudSkeleton SkeletonType="SkeletonType.Text" Width="200px" Height="40px" />
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="180px" Height="40px" />
    </div>

    <div class="row">
        <div class="col-lg-8">
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="500px" />
        </div>
    </div>
}
else
{
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">Create New Achievement</h1>
        <MudButton Variant="Variant.Text" Color="Color.Secondary" Href="/admin/achievements">
            <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Class="me-2" />
            Back to Achievements
        </MudButton>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <MudText Typo="Typo.h6">Achievement Information</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudForm Model="Achievement" OnValidSubmit="AddAchievement" @ref="form">
                        <MudAlert Severity="Severity.Error" Class="mb-3" Visible="@(!form.IsValid)">
                            <MudText>Please correct the errors below.</MudText>
                        </MudAlert>

                        <MudTextField @bind-Value="Achievement.Name" Label="Name" Variant="Variant.Text" Required="true" RequiredError="Name is required!" />

                        <MudTextField @bind-Value="Achievement.Description" Label="Description" Variant="Variant.Text" Lines="3"
                                      Placeholder="Enter achievement description" />

                        <MudGrid>
                            <MudItem T="string" xs="12" md="6">
                                <MudTextField @bind-Value="Achievement.IconUrl" Label="Icon URL" Variant="Variant.Text"
                                              Placeholder="https://example.com/icon.png" />
                            </MudItem>
                            <MudItem T="string" xs="12" md="6">
                                <MudNumericField @bind-Value="Achievement.Points" Label="Points" Variant="Variant.Text" // Fixed RZ9991 by using 'bind-Value'
                                                 Placeholder="100" />
                            </MudItem>
                        </MudGrid>

                        <MudGrid>
                            <MudItem T="string" xs="12" md="6">
                                <MudTextField @bind-Value="Achievement.BadgeColor" Label="Badge Color" Variant="Variant.Text" InputType="InputType.Color" />
                            </MudItem>
                            <MudItem T="string" xs="12" md="6">
                                <MudSelect @bind-Value="Achievement.Type" Label="Achievement Type" Variant="Variant.Text">
                                    @foreach (var enumValue in Enum.GetValues(typeof(AchievementType)).Cast<AchievementType>())
                                    {
                                        <MudSelectItem Value="@enumValue">@enumValue.ToString()</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudItem>
                        </MudGrid>

                        <div class="d-flex gap-2">
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="@isSubmitting">
                                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Class="me-2" />
                                Create Achievement
                            </MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Href="/admin/achievements">Cancel</MudButton>
                        </div>
                    </MudForm>
                </MudCardContent>
            </MudCard>
        </div>
    </div>
}

@code {
    [SupplyParameterFromForm]
    private CreateAchievementRequest Achievement { get; set; } = new();
    private bool isSubmitting = false;
    private bool isLoading = true;
    private MudForm form;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task AddAchievement()
    {
        if (isSubmitting) return;
        
        isSubmitting = true;
        try
        {
            var result = await AchievementRepository.CreateAchievementAsync(Achievement);
            if (result != null)
            {
                ToastService.ShowSuccess("Success", "Achievement created successfully!");
                NavigationManager.NavigateTo("/admin/achievements");
            }
            else
            {
                ToastService.ShowError("Error", "Failed to create achievement. Please try again.");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("Error", $"Error creating achievement: {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
