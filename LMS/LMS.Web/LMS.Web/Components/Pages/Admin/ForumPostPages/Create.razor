@page "/admin/forumposts/create"

@using LMS.Repositories

@inject IForumRepository ForumRepository
@inject IDropdownRepository DropdownRepository
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode())

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>ForumPost</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="ForumPost" OnValidSubmit="AddForumPost">
            <AntiforgeryToken />
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="content" class="form-label">Content <span class="text-danger">*</span></label>
                <InputTextArea id="content" @bind-Value="ForumPost.Content" class="form-control" rows="4"
                    aria-required="true" placeholder="Enter post content" />
                <ValidationMessage For="() => ForumPost.Content" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="topicid" class="form-label">Topic <span class="text-danger">*</span></label>
                <SearchableSelectComponent TItem="DropdownOption" TValue="int" Items="@forumOptions"
                    ValueSelector="@(item => item.Value)" DisplaySelector="@(item => item.Text)"
                    SearchFunction="@SearchForums" SelectedValue="@ForumPost.TopicId"
                    OnSelectedValueChanged="@((int value) => ForumPost.TopicId = value)" Placeholder="Select a topic..."
                    class="form-control" />
                <ValidationMessage For="() => ForumPost.TopicId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="parentpostid" class="form-label">Parent Post ID (Optional)</label>
                <InputNumber id="parentpostid" @bind-Value="ForumPost.ParentPostId" class="form-control"
                    placeholder="Enter parent post ID for replies" />
                <ValidationMessage For="() => ForumPost.ParentPostId" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/admin/forumposts">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private CreateForumPostRequest ForumPost { get; set; } = new();

    private List<DropdownOption> forumOptions = new();

    protected override async Task OnInitializedAsync()
    {
        // Load initial options - using forums as topics for now
        forumOptions = await DropdownRepository.GetForumsAsync(search: "", take: 20);
    }

    private async Task<IEnumerable<DropdownOption>> SearchForums(string searchTerm)
    {
        return await DropdownRepository.GetForumsAsync(searchTerm, take: 20);
    }

    private async Task AddForumPost()
    {
        try
        {
            // For admin pages, we'll use a placeholder admin user ID
            // In a real application, you'd get this from the authentication context
            var adminUserId = "admin-user-id"; // This should come from authentication

            var result = await ForumRepository.CreatePostAsync(ForumPost, adminUserId);
            if (result != null)
            {
                NavigationManager.NavigateTo("/admin/forumposts");
            }
        }
        catch (Exception ex)
        {
            // Handle error - could add error display logic here
            Console.WriteLine($"Error creating forum post: {ex.Message}");
        }
    }
}
