
@using BlazorBootstrap;
@page "/admin"
@rendermode @(new InteractiveServerRenderMode())

@using Microsoft.AspNetCore.Components.Web

<PageTitle>Admin Dashboard</PageTitle>

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="mb-0">Admin Dashboard</h1>
                <p class="text-muted">Welcome to the LMS Administration Panel</p>
            </div>
            <div>
                <Button Color="ButtonColor.Primary" Href="/admin/analytics">
                    <Icon Name="IconName.BarChart" />
                    View Detailed Analytics
                </Button>
            </div>
        </div>
    </div>
</div>

<div class="row g-4">
    <div class="col-lg-3 col-md-6">
        <Card>
            <CardBody>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title">Courses</h5>
                        <h3 class="mb-0">@totalCourses</h3>
                    </div>
                    <Icon Name="IconName.Book" Class="fs-1 opacity-75" />
                </div>
                <Button Color="ButtonColor.Light" Size="ButtonSize.Small" class="mt-2" To="/admin/courses">Manage Courses</Button>
            </CardBody>
        </Card>
    </div>

    <div class="col-lg-3 col-md-6">
        <Card>
            <CardBody>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title">Categories</h5>
                        <h3 class="mb-0">@totalCategories</h3>
                    </div>
                    <Icon Name="IconName.Tags" Class="fs-1 opacity-75" />
                </div>
                <Button Color="ButtonColor.Light" Size="ButtonSize.Small" class="mt-2" To="/admin/categories">Manage Categories</Button>
            </CardBody>
        </Card>
    </div>

    <div class="col-lg-3 col-md-6">
        <Card>
            <CardBody>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title">Assessments</h5>
                        <h3 class="mb-0">@totalAssessments</h3>
                    </div>
                    <Icon Name="IconName.ClipboardCheck" Class="fs-1 opacity-75" />
                </div>
                <Button Color="ButtonColor.Light" Size="ButtonSize.Small" class="mt-2" To="/admin/assessments">Manage Assessments</Button>
            </CardBody>
        </Card>
    </div>

    <div class="col-lg-3 col-md-6">
        <Card>
            <CardBody>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title">Enrollments</h5>
                        <h3 class="mb-0">@totalEnrollments</h3>
                    </div>
                    <Icon Name="IconName.PersonPlus" Class="fs-1 opacity-75" />
                </div>
                <Button Color="ButtonColor.Light" Size="ButtonSize.Small" class="mt-2" To="/admin/enrollments">Manage Enrollments</Button>
            </CardBody>
        </Card>
    </div>
</div>

<!-- Charts Section -->
<div class="row g-4 mt-2">
    <div class="col-lg-8">
        <Card>
            <CardHeader>
                <h5 class="card-title mb-0">Course Enrollment Trends</h5>
            </CardHeader>
            <CardBody>
                <LineChart @ref="enrollmentChart" Width="600" Height="300" />
            </CardBody>
        </Card>
    </div>
    <div class="col-lg-4">
        <Card>
            <CardHeader>
                <h5 class="card-title mb-0">Course Categories</h5>
            </CardHeader>
            <CardBody>
                <PieChart @ref="categoryPieChart" Width="300" Height="300" />
            </CardBody>
        </Card>
    </div>
</div>

<div class="row g-4 mt-2">
    <div class="col-lg-6">
        <Card>
            <CardHeader>
                <h5 class="card-title mb-0">Assessment Completion Rate</h5>
            </CardHeader>
            <CardBody>
                <BarChart @ref="assessmentBarChart" Width="400" Height="300" />
            </CardBody>
        </Card>
    </div>
    <div class="col-lg-6">
        <Card>
            <CardHeader>
                <h5 class="card-title mb-0">Monthly Student Activity</h5>
            </CardHeader>
            <CardBody>
                <DoughnutChart @ref="activityDoughnutChart" Width="300" Height="300" />
            </CardBody>
        </Card>
    </div>
</div>

@code {
    private int totalCourses = 0;
    private int totalCategories = 0;
    private int totalAssessments = 0;
    private int totalEnrollments = 0;

    private LineChart enrollmentChart = default!;
    private PieChart categoryPieChart = default!;
    private BarChart assessmentBarChart = default!;
    private DoughnutChart activityDoughnutChart = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeCharts();
        }
    }

    protected override void OnInitialized()
    {
        GenerateDummyData();
    }

    private async Task InitializeCharts()
    {
        await InitializeEnrollmentChart();
        await InitializeCategoryPieChart();
        await InitializeAssessmentBarChart();
        await InitializeActivityDoughnutChart();
    }

    private async Task InitializeEnrollmentChart()
    {
        var chartData = new ChartData
        {
            Labels = new List<string> { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" },
            Datasets = new List<IChartDataset>
            {
                new LineChartDataset
                {
                    Label = "New Enrollments",
                    Data = new List<double?> { 65, 78, 85, 92, 88, 95, 102, 98, 105, 112, 108, 115 },
                    BackgroundColor = "rgba(54, 162, 235, 0.2)",
                    BorderColor = "rgba(54, 162, 235, 1)",
                    BorderWidth = 2,
                    Fill = true
                },
                new LineChartDataset
                {
                    Label = "Course Completions",
                    Data = new List<double?> { 28, 35, 42, 48, 45, 52, 58, 55, 62, 68, 65, 72 },
                    BackgroundColor = "rgba(255, 99, 132, 0.2)",
                    BorderColor = "rgba(255, 99, 132, 1)",
                    BorderWidth = 2,
                    Fill = true
                }
            }
        };

        var chartOptions = new LineChartOptions
        {
            Responsive = true,
            Interaction = new Interaction { Mode = InteractionMode.Index }
        };

        await enrollmentChart.InitializeAsync(chartData, chartOptions);
    }

    private async Task InitializeCategoryPieChart()
    {
        var chartData = new ChartData
        {
            Labels = new List<string> { "Programming", "Design", "Business", "Marketing", "Data Science", "Others" },
            Datasets = new List<IChartDataset>
            {
                new PieChartDataset
                {
                    Data = new List<double?> { 35, 25, 20, 10, 7, 3 },
                    BackgroundColor = new List<string>
                    {
                        "rgba(255, 99, 132, 0.8)",
                        "rgba(54, 162, 235, 0.8)",
                        "rgba(255, 205, 86, 0.8)",
                        "rgba(75, 192, 192, 0.8)",
                        "rgba(153, 102, 255, 0.8)",
                        "rgba(255, 159, 64, 0.8)"
                    },
                    BorderColor = new List<string>
                    {
                        "rgba(255, 99, 132, 1)",
                        "rgba(54, 162, 235, 1)",
                        "rgba(255, 205, 86, 1)",
                        "rgba(75, 192, 192, 1)",
                        "rgba(153, 102, 255, 1)",
                        "rgba(255, 159, 64, 1)"
                    },
                    BorderWidth = new List<double> { 1 }
                }
            }
        };

        var chartOptions = new PieChartOptions
        {
            Responsive = true
        };

        await categoryPieChart.InitializeAsync(chartData, chartOptions);
    }

    private async Task InitializeAssessmentBarChart()
    {
        var chartData = new ChartData
        {
            Labels = new List<string> { "Beginner", "Intermediate", "Advanced", "Expert" },
            Datasets = new List<IChartDataset>
            {
                new BarChartDataset
                {
                    Label = "Completion Rate (%)",
                    Data = new List<double?> { 85, 72, 58, 45 },
                    BackgroundColor = new List<string>
                    {
                        "rgba(75, 192, 192, 0.8)",
                        "rgba(54, 162, 235, 0.8)",
                        "rgba(255, 205, 86, 0.8)",
                        "rgba(255, 99, 132, 0.8)"
                    },
                    BorderColor = new List<string>
                    {
                        "rgba(75, 192, 192, 1)",
                        "rgba(54, 162, 235, 1)",
                        "rgba(255, 205, 86, 1)",
                        "rgba(255, 99, 132, 1)"
                    },
                    BorderWidth = new List<double> { 1 }
                }
            }
        };

        var chartOptions = new BarChartOptions
        {
            Responsive = true
        };

        await assessmentBarChart.InitializeAsync(chartData, chartOptions);
    }

    private async Task InitializeActivityDoughnutChart()
    {
        var chartData = new ChartData
        {
            Labels = new List<string> { "Active Learners", "Completed Courses", "In Progress", "Inactive" },
            Datasets = new List<IChartDataset>
            {
                new DoughnutChartDataset
                {
                    Data = new List<double?> { 45, 25, 20, 10 },
                    BackgroundColor = new List<string>
                    {
                        "rgba(34, 197, 94, 0.8)",
                        "rgba(59, 130, 246, 0.8)",
                        "rgba(251, 191, 36, 0.8)",
                        "rgba(239, 68, 68, 0.8)"
                    },
                    BorderColor = new List<string>
                    {
                        "rgba(34, 197, 94, 1)",
                        "rgba(59, 130, 246, 1)",
                        "rgba(251, 191, 36, 1)",
                        "rgba(239, 68, 68, 1)"
                    },
                    BorderWidth = new List<double> { 2 }
                }
            }
        };

        var chartOptions = new DoughnutChartOptions
        {
            Responsive = true
        };

        await activityDoughnutChart.InitializeAsync(chartData, chartOptions);
    }

    private void GenerateDummyData()
    {
        var random = new Random();
        totalCourses = random.Next(10, 50);
        totalCategories = random.Next(5, 20);
        totalAssessments = random.Next(20, 100);
        totalEnrollments = random.Next(100, 500);
    }
}

<div class="row g-4 mt-2">
    <div class="col-md-6">
        <Card>
            <CardHeader>
                <h5 class="card-title mb-0">Quick Actions</h5>
            </CardHeader>
            <CardBody>
                <div class="list-group list-group-flush">
                    <a href="/admin/courses/create"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.PlusCircle" Class="me-2" />Create New Course</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                    <a href="/admin/categories/create"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.PlusCircle" Class="me-2" />Create New Category</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                    <a href="/admin/assessments/create"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.PlusCircle" Class="me-2" />Create New Assessment</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                    <a href="/admin/achievements/create"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.PlusCircle" Class="me-2" />Create New Achievement</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                </div>
            </CardBody>
        </Card>
    </div>

    <div class="col-md-6">
        <Card>
            <CardHeader>
                <h5 class="card-title mb-0">Management Tools</h5>
            </CardHeader>
            <CardBody>
                <div class="list-group list-group-flush">
                    <a href="/admin/modules"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.Collection" Class="me-2" />Manage Modules</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                    <a href="/admin/lessons"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.PlayCircle" Class="me-2" />Manage Lessons</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                    <a href="/admin/forums"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.ChatSquareText" Class="me-2" />Manage Forums</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                    <a href="/admin/certificates"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <span><Icon Name="IconName.Award" Class="me-2" />Manage Certificates</span>
                        <Icon Name="IconName.ChevronRight" />
                    </a>
                </div>
            </CardBody>
        </Card>
    </div>
</div>


                       
                       
                       
                       
                       
                       
                       
                       