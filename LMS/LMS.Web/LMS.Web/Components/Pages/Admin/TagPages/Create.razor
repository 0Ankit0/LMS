@page "/admin/tags/create"

@using LMS.Repositories
@using LMS.Web.Components.Shared
@using LMS.Web.Services

@inject ITagRepository TagRepository
@inject NavigationManager NavigationManager
@inject LMS.Web.Services.ToastService ToastService
@rendermode @(new InteractiveServerRenderMode())

<PageTitle>Create Tag - Admin</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">Create New Tag</h1>
    <Button Color="ButtonColor.Secondary" Href="/admin/tags">
        <Icon Name="IconName.ArrowLeft" />
        Back to Tags
    </Button>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Tag Information</h5>
            </div>
            <div class="card-body">
                <EditForm Model="Tag" OnValidSubmit="AddTag">
                    <AntiforgeryToken />
                    <DataAnnotationsValidator />
                    <ValidationSummary class="alert alert-danger" role="alert" />

                    <div class="row">
                        <div class="col-md-8 mb-3">
                            <label for="name" class="form-label">Name <span class="text-danger">*</span></label>
                            <InputText id="name" @bind-Value="Tag.Name" class="form-control" aria-required="true" 
                                       placeholder="Enter tag name" />
                            <ValidationMessage For="() => Tag.Name" class="text-danger" />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="color" class="form-label">Color</label>
                            <InputText id="color" @bind-Value="Tag.Color" class="form-control" type="color" />
                            <ValidationMessage For="() => Tag.Color" class="text-danger" />
                        </div>
                    </div>

                    <div class="d-flex gap-2">
                        <Button Color="ButtonColor.Primary" Type="ButtonType.Submit" Loading="@isSubmitting">
                            <Icon Name="IconName.CheckCircle" />
                            Create Tag
                        </Button>
                        <Button Color="ButtonColor.Secondary" Href="/admin/tags">Cancel</Button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private CreateTagRequest Tag { get; set; } = new();
    private bool isSubmitting = false;

    private async Task AddTag()
    {
        if (isSubmitting) return;
        
        isSubmitting = true;
        try
        {
            var result = await TagRepository.CreateTagAsync(Tag);
            if (result != null)
            {
                ToastService.ShowSuccess("Success", "Tag created successfully!");
                NavigationManager.NavigateTo("/admin/tags");
            }
            else
            {
                ToastService.ShowError("Error", "Failed to create tag. Please try again.");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError("Error", $"Error creating tag: {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
