@page "/admin/tags/create"

@using LMS.Repositories
@inject ITagRepository TagRepository
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode())

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Tag</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Tag" onsubmit="AddTag">
            <AntiforgeryToken />
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Tag.Name" class="form-control" aria-required="true" />
                <ValidationMessage For="() => Tag.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="color" class="form-label">Color:</label>
                <InputText id="color" @bind-Value="Tag.Color" class="form-control" />
                <ValidationMessage For="() => Tag.Color" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/tags">Back to List</a>
</div>

@code {
    private CreateTagRequest Tag { get; set; } = new();
    private async Task AddTag()
    {
        try
        {
            var result = await TagRepository.CreateTagAsync(Tag);
            if (result != null)
            {
                NavigationManager.NavigateTo("/admin/tags");
            }
        }
        catch (Exception ex)
        {
            // Handle error - could add error display logic here
            Console.WriteLine($"Error creating tag: {ex.Message}");
        }
    }
}
