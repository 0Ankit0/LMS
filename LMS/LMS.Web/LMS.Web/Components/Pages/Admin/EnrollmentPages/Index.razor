@page "/admin/enrollments"


@using LMS.Repositories
@inject IEnrollmentRepository EnrollmentRepository

<PageTitle>Enrollments - Admin</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">Enrollments</h1>
    <a href="/admin/enrollments/create" class="btn btn-primary">
        <i class="bi bi-plus-circle me-2"></i>Add New Enrollment
    </a>
</div>

<div class="card">
    <div class="card-body">
        @if (paginatedEnrollments != null)
        {
            if (paginatedEnrollments.Items.Any())
            {
                <QuickGrid Class="table table-striped table-hover" Items="paginatedEnrollments.Items.AsQueryable()">
                    <PropertyColumn Property="enrollment => enrollment.UserId" Title="User ID" />
                    <PropertyColumn Property="enrollment => enrollment.UserName" Title="User Name" />
                    <PropertyColumn Property="enrollment => enrollment.CourseId" Title="Course ID" />
                    <PropertyColumn Property="enrollment => enrollment.CourseTitle" Title="Course Title" />
                    <PropertyColumn Property="enrollment => enrollment.EnrolledAt" Title="Enrolled" Format="yyyy-MM-dd" />
                    <PropertyColumn Property="enrollment => enrollment.Status" Title="Status" />
                    <PropertyColumn Property="enrollment => enrollment.ProgressPercentage" Title="Progress %" />
                    <PropertyColumn Property="enrollment => enrollment.FinalGrade" Title="Final Grade" />

                    <TemplateColumn Title="Actions" Context="enrollment">
                        <div class="btn-group" role="group">
                            <a href="@($"/admin/enrollments/edit?id={enrollment.Id}")" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a href="@($"/admin/enrollments/details?id={enrollment.Id}")" class="btn btn-sm btn-outline-info">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            <a href="@($"/admin/enrollments/delete?id={enrollment.Id}")" class="btn btn-sm btn-outline-danger">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </TemplateColumn>
                </QuickGrid>

                <PaginationComponent TItem="EnrollmentModel" PaginatedResult="paginatedEnrollments"
                    OnPageChanged="OnPageChanged" OnPageSizeChanged="OnPageSizeChanged" />
            }
            else
            {
                <div class="text-center py-4">
                    <p class="text-muted">No enrollments found.</p>
                </div>
            }
        }
        else
        {
            <div class="text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private PaginatedResult<EnrollmentModel>? paginatedEnrollments;
    private int currentPage = 1;
    private int pageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadEnrollmentsAsync();
    }

    private async Task LoadEnrollmentsAsync()
    {
        var request = new PaginationRequest
        {
            PageNumber = currentPage,
            PageSize = pageSize
        };
        paginatedEnrollments = await EnrollmentRepository.GetEnrollmentsPaginatedAsync(request);
    }

    private async Task OnPageChanged(int page)
    {
        currentPage = page;
        await LoadEnrollmentsAsync();
    }

    private async Task OnPageSizeChanged(int size)
    {
        pageSize = size;
        currentPage = 1;
        await LoadEnrollmentsAsync();
    }
}
