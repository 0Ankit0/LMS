@typeparam TItem

<div class="card">
    <div class="card-body">
        @if (PaginatedResult != null)
        {
            if (PaginatedResult.Items.Any())
            {
                <Grid TItem="TItem" Class="table table-striped table-hover" Data="PaginatedResult.Items">
                    @Columns
                    @if (Actions != null)
                    {
                        <GridColumn TItem="TItem" HeaderText="Actions">
                            @Actions(context)
                        </GridColumn>
                    }
                </Grid>

                <PaginationComponent TItem="TItem" PaginatedResult="PaginatedResult" OnPageChanged="OnPageChanged"
                    OnPageSizeChanged="OnPageSizeChanged" />
            }
            else
            {
                <div class="text-center py-4">
                    <p class="text-muted">@EmptyMessage</p>
                </div>
            }
        }
        else
        {
            <div class="text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired] public PaginatedResult<TItem>? PaginatedResult { get; set; }
    [Parameter] public RenderFragment? Columns { get; set; }
    [Parameter] public RenderFragment<TItem>? Actions { get; set; }
    [Parameter] public string EmptyMessage { get; set; } = "No items found.";
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }
    [Parameter] public EventCallback<int> OnPageSizeChanged { get; set; }
}
