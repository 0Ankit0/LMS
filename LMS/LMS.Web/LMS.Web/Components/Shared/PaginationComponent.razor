@typeparam TItem

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="d-flex align-items-center">
        <label for="pageSize" class="form-label me-2 mb-0">Show:</label>
        <select @onchange="HandlePageSizeChanged" class="form-select" style="width: auto;" id="pageSize">
            <option value="10" selected="@(EffectivePageSize == 10)">10</option>
            <option value="25" selected="@(EffectivePageSize == 25)">25</option>
            <option value="50" selected="@(EffectivePageSize == 50)">50</option>
            <option value="100" selected="@(EffectivePageSize == 100)">100</option>
        </select>
        <span class="ms-2 text-muted">
            Showing @StartItem to @EndItem of @EffectiveTotalCount items
        </span>
    </div>

    @if (EffectiveTotalPages > 1)
    {
        <Pagination CurrentPage="EffectiveCurrentPage"
                    TotalPages="EffectiveTotalPages"
                    OnPageChanged="HandlePageChanged" />
    }
</div>

@code {
    [Parameter] public PaginatedResult<TItem>? PaginatedResult { get; set; }
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }
    [Parameter] public EventCallback<int> OnPageSizeChanged { get; set; }

    private int EffectiveCurrentPage => PaginatedResult?.PageNumber ?? 1;
    private int EffectivePageSize => PaginatedResult?.PageSize ?? 10;
    private int EffectiveTotalCount => PaginatedResult?.TotalCount ?? 0;
    private int EffectiveTotalPages => PaginatedResult?.TotalPages ?? 0;

    private int StartItem => EffectiveTotalCount == 0 ? 0 : ((EffectiveCurrentPage - 1) * EffectivePageSize) + 1;
    private int EndItem => Math.Min(EffectiveCurrentPage * EffectivePageSize, EffectiveTotalCount);

    private async Task HandlePageSizeChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var newSize))
        {
            await OnPageSizeChanged.InvokeAsync(newSize);
        }
    }

    private async Task HandlePageChanged(int page)
    {
        await OnPageChanged.InvokeAsync(page);
    }
}
