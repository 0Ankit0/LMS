@page "/admin/course-master/{id:int}"
@using LMS.Repositories
@using MudBlazor
@inject NavigationManager NavigationManager
@inject ICourseRepository CourseRepository

@if (isLoading)
{
    <MudStack Spacing="2" Style="min-height: 100vh;">
        <!-- Skeleton for Top Navigation Bar -->
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="64px" Width="100%" />

        <!-- Skeleton for Tab Navigation -->
        <MudGrid Justify="Justify.SpaceAround" Class="p-4">
            <MudItem xs="4" sm="4" md="4">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100px" Height="40px" />
            </MudItem>
            <MudItem xs="4" sm="4" md="4">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100px" Height="40px" />
            </MudItem>
            <MudItem xs="4" sm="4" md="4">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100px" Height="40px" />
            </MudItem>
        </MudGrid>

        <!-- Skeleton for Tab Content -->
        <MudStack Class="p-4" Style="flex-grow:1;">
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="500px" Width="100%" />
        </MudStack>
    </MudStack>
}
else
{
    <div class="d-flex" style="min-height: 100vh; background: #36393f;">
        <!-- Discord-like Sidebar (Only visible when Forum tab is active) -->
        @if (activeTab == "Forum")
        {
            <MudNavMenu Class="sidebar bg-dark text-white p-3" Style="width: 260px; min-height: 100vh;">
                <MudNavGroup Title="Course Forums" Expanded="true">
                    <MudNavLink OnClick="@(() => SelectForumChannel("general"))" Icon="@Icons.Material.Filled.Tag" Active="@(selectedForumChannel == "general")">general</MudNavLink>
                    <MudNavLink OnClick="@(() => SelectForumChannel("announcements"))" Icon="@Icons.Material.Filled.Campaign" Active="@(selectedForumChannel == "announcements")">announcements</MudNavLink>
                    <MudNavLink OnClick="@(() => SelectForumChannel("questions"))" Icon="@Icons.Material.Filled.Help" Active="@(selectedForumChannel == "questions")">questions</MudNavLink>
                    <MudNavLink OnClick="@(() => SelectForumChannel("assignments"))" Icon="@Icons.Material.Filled.Assignment" Active="@(selectedForumChannel == "assignments")">assignments</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Study Groups" Expanded="true">
                    <MudNavLink Icon="@Icons.Material.Filled.People">Study Group 1</MudNavLink>
                    <MudNavLink Icon="@Icons.Material.Filled.People">Study Group 2</MudNavLink>
                </MudNavGroup>
            </MudNavMenu>
        }

        <!-- Main Content Area -->
        <div class="flex-grow-1 d-flex flex-column">
            <!-- Top Navigation Bar -->
            <MudAppBar Elevation="1">
                <MudText Typo="Typo.h6" Class="fw-bold mb-1">@course.Title</MudText>
                <MudText Typo="Typo.caption" Class="text-muted small mb-0">@course.Description</MudText>
                <MudSpacer />
                <MudChip T="string" Color="Color.Primary" Class="me-2">@course.Level</MudChip>
                <MudText Typo="Typo.caption" Class="text-muted small">@course.EstimatedDuration</MudText>
            </MudAppBar>

            <!-- Tab Navigation -->
            <MudTabs Elevation="0" Rounded="true" PanelClass="mt-4">
                <MudTabPanel Text="Forum" Icon="@Icons.Material.Filled.Forum" Active="@(activeTab == "Forum")" OnClick="@(() => SetActiveTab("Forum"))" />
                <MudTabPanel Text="Resources" Icon="@Icons.Material.Filled.Folder" Active="@(activeTab == "Resources")" OnClick="@(() => SetActiveTab("Resources"))" />
                <MudTabPanel Text="Assessment" Icon="@Icons.Material.Filled.Assignment" Active="@(activeTab == "Assessment")" OnClick="@(() => SetActiveTab("Assessment"))" />
            </MudTabs>

            <!-- Tab Content -->
            <div class="flex-grow-1 p-4" style="background: #f8f9fa;">
                @if (activeTab == "Forum")
                {
                    <MudContainer MaxWidth="MaxWidth.False">
                        <MudCard Elevation="2">
                            <MudCardHeader>
                                <MudText Typo="Typo.h6">
                                    <MudIcon Icon="@Icons.Material.Filled.Tag" Class="me-2" />@selectedForumChannel
                                </MudText>
                                <MudSpacer />
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">
                                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="me-1" /> New Post
                                </MudButton>
                            </MudCardHeader>
                            <MudCardContent>
                                @if (forumPosts.Any())
                                {
                                    @foreach (var post in forumPosts)
                                    {
                                        <MudPaper Elevation="0" Class="mb-3 py-3 px-2 mud-border-b">
                                            <MudGrid Spacing="2">
                                                <MudItem xs="12">
                                                    <MudAvatar Color="Color.Primary" Variant="Variant.Filled" Size="Size.Medium">
                                                        <MudText Typo="Typo.h6">@post.AuthorName.Substring(0, 1)</MudText>
                                                    </MudAvatar>
                                                </MudItem>
                                                <MudItem xs="12">
                                                    <MudText Typo="Typo.subtitle1" Class="fw-semibold">@post.AuthorName</MudText>
                                                    <MudText Typo="Typo.caption" Class="text-muted">@post.CreatedAt.ToString("MMM dd, yyyy")</MudText>
                                                    <MudText Class="mb-2">@post.Content</MudText>
                                                    <MudButtonGroup>
                                                        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small">
                                                            <MudIcon Icon="@Icons.Material.Filled.FavoriteBorder" Class="me-1" /> Like
                                                        </MudButton>
                                                        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Size="Size.Small">
                                                            <MudIcon Icon="@Icons.Material.Filled.Reply" Class="me-1" /> Reply
                                                        </MudButton>
                                                    </MudButtonGroup>
                                                </MudItem>
                                            </MudGrid>
                                        </MudPaper>
                                    }
                                }
                                else
                                {
                                    <MudText Align="MudBlazor.Align.Center" Class="py-5">
                                        <MudIcon Icon="@Icons.Material.Filled.Chat" Size="Size.Large" Class="text-muted" />
                                        <MudText Typo="Typo.subtitle1" Class="text-muted mt-3">No posts yet. Be the first to start a discussion!</MudText>
                                    </MudText>
                                }
                            </MudCardContent>
                        </MudCard>
                    </MudContainer>
                }
                else if (activeTab == "Resources")
                {
                    <MudContainer MaxWidth="MaxWidth.False">
                        <MudCard Elevation="2">
                            <MudCardHeader>
                                <MudText Typo="Typo.h6">
                                    <MudIcon Icon="@Icons.Material.Filled.Folder" Class="me-2" />Course Resources
                                </MudText>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudGrid Spacing="4">
                                    @foreach (var resource in courseResources)
                                    {
                                        <MudItem xs="12" md="6" lg="4">
                                            <MudCard Outlined="true" Height="100%">
                                                <MudCardContent>
                                                    <div class="d-flex align-items-center mb-3">
                                                        <MudIcon Icon="@Icons.Material.Filled.PictureAsPdf" Color="Color.Error" Size="Size.Large" Class="me-2" />
                                                        <div>
                                                            <MudText Typo="Typo.subtitle1">@resource.Name</MudText>
                                                            <MudText Typo="Typo.caption" Class="text-muted">@resource.Type</MudText>
                                                        </div>
                                                    </div>
                                                    <MudText Typo="Typo.body2" Class="text-muted mb-3">@resource.Description</MudText>
                                                    <MudButton Href="@resource.ExternalUrl" Target="_blank" Variant="Variant.Outlined" Color="Color.Primary" FullWidth="true">
                                                        <MudIcon Icon="@Icons.Material.Filled.Download" Class="me-1" /> Download
                                                    </MudButton>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudItem>
                                    }
                                </MudGrid>
                            </MudCardContent>
                        </MudCard>
                    </MudContainer>
                }
                else if (activeTab == "Assessment")
                {
                    <MudContainer MaxWidth="MaxWidth.False">
                        <MudCard Elevation="2">
                            <MudCardHeader>
                                <MudText Typo="Typo.h6">
                                    <MudIcon Icon="@Icons.Material.Filled.Assignment" Class="me-2" />Assessments
                                </MudText>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudGrid Spacing="4">
                                    @foreach (var assessment in assessments)
                                    {
                                        <MudItem xs="12" md="6">
                                            <MudCard Outlined="true" Height="100%">
                                                <MudCardContent>
                                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                                        <div>
                                                            <MudText Typo="Typo.subtitle1">@assessment.Title</MudText>
                                                            <MudChip T="string" Color="Color.Info" Size="Size.Small">@assessment.Type</MudChip>
                                                        </div>
                                                        <MudText Typo="Typo.caption" Class="text-muted">100 pts</MudText>
                                                    </div>
                                                    <MudText Typo="Typo.body2" Class="text-muted mb-3">@assessment.Description</MudText>
                                                    <MudText Typo="Typo.caption" Class="text-muted mb-3">Due: @assessment.AvailableUntil?.ToString("MMM dd, yyyy")</MudText>
                                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">
                                                        <MudIcon Icon="@Icons.Material.Filled.PlayCircle" Class="me-1" /> Start Assessment
                                                    </MudButton>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudItem>
                                    }
                                </MudGrid>
                            </MudCardContent>
                        </MudCard>
                    </MudContainer>
                }
            </div>
        </div>
    </div>
}

@code {
    private CourseModel? course;
    private string activeTab = "Forum";
    private string selectedForumChannel = "general";
    private bool isLoading = true; // Add isLoading state

    // Data lists
    private List<ForumPostModel> forumPosts = new();
    private List<LessonResourceModel> courseResources = new();
    private List<AssessmentModel> assessments = new();

    [SupplyParameterFromQuery(Name ="id")]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Load course data from repository
        course = await CourseRepository.GetCourseByIdAsync(Id);
        if (course is null)
        {
            // Optionally, navigate to not found or show error
            isLoading = false;
            return;
        }
        // TODO: Load forum posts, resources, and assessments from their respective repositories if needed
        // For now, keep the lists empty or with mock data if required
        forumPosts = new List<ForumPostModel>();
        courseResources = new List<LessonResourceModel>();
        assessments = new List<AssessmentModel>();
        isLoading = false;
    }

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
    }

    private void SelectForumChannel(string channel)
    {
        selectedForumChannel = channel;
        // Optionally, filter forumPosts by channel if needed
    }
}




