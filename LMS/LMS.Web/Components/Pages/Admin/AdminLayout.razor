@using LMS.Web.Components.Layout
@using MudBlazor.StaticInput
@inherits LayoutComponentBase
@layout MainLayout
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawerContainer Style="height:calc(100vh - 64px);">
        <MudDrawer @bind-Open="_drawerOpen" 
                   Fixed="true" 
                   Elevation="2" 
                   Variant="DrawerVariant.Mini" 
                   Breakpoint="Breakpoint.None"
                   ClipMode="DrawerClipMode.Never">
            <MudNavMenu>
                @foreach (var nav in NavLinks)
                {
                    if (!_drawerOpen)
                    {
                        <MudTooltip Text="@nav.Title">
                            <MudNavLink Href="@nav.Href" Icon="@nav.Icon" />
                        </MudTooltip>
                    }
                    else
                    {
                        <MudNavLink Href="@nav.Href" Icon="@nav.Icon">@nav.Title</MudNavLink>
                    }
                }
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent Style="padding:16px; overflow-y:auto; height:calc(100vh - 64px);">
            @Body
        </MudMainContent>
    </MudDrawerContainer>
</MudLayout>

@code{
    private bool _drawerOpen = false;
    private void ToggleDrawer() => _drawerOpen = !_drawerOpen;

    private record NavLink(string Href, string Icon, string Title);
    private List<NavLink> NavLinks;

    protected override void OnInitialized()
    {
        NavLinks = new List<NavLink>
        {
            new("/admin/achievements", Icons.Material.Filled.EmojiEvents, "Achievements"),
            new("/admin/assessments", Icons.Material.Filled.Assignment, "Assessments"),
            new("/admin/categories", Icons.Material.Filled.Category, "Categories"),
            new("/admin/certificates", Icons.Material.Filled.WorkspacePremium, "Certificates"),
            new("/admin/courses", Icons.Material.Filled.Book, "Courses"),
            new("/admin/enrollments", Icons.Material.Filled.HowToReg, "Enrollments"),
            new("/admin/forums", Icons.Material.Filled.Forum, "Forums"),
            new("/admin/lessons", Icons.Material.Filled.School, "Lessons"),
            new("/admin/modules", Icons.Material.Filled.Folder, "Modules"),
            new("/admin/questions", Icons.Material.Filled.QuestionAnswer, "Questions"),
            new("/admin/tags", Icons.Material.Filled.Tag, "Tags")
        };
    }
}
