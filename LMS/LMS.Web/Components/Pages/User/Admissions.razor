@page "/apply"
@page "/admissions"
@using LMS.Data.DTOs.UserManagement
@using LMS.Web.Repositories
@inject IAdmissionsRepository AdmissionsRepository
@inject IFileRepository FileRepository
@inject NavigationManager Navigation
@inject IJSRuntime JS
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>Apply for Admission</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="py-8">
    <MudStack AlignItems="AlignItems.Center" Spacing="3" Class="mb-12">
        <MudText Typo="Typo.h3" Class="font-bold text-center">Apply for Admission</MudText>
        <MudText Typo="Typo.body1" Class="text-center text-gray-600 dark:text-gray-400">Join our learning community by completing your application below</MudText>
    </MudStack>

    @if (showSuccess)
    {
        <MudAlert Severity="Severity.Success" Class="mb-6">
            <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" />
                <MudText><strong>Application Submitted Successfully!</strong></MudText>
            </MudStack>
            <MudText Class="mt-2">Thank you for your application. We will review it and get back to you within 5-7 business days.</MudText>
        </MudAlert>
    }
    else if (myApplication != null && myApplication.Status != "Draft")
    {
        <!-- Existing Application Status -->
        <MudCard Class="mb-8" Elevation="2">
            <MudCardHeader>
                <MudText Typo="Typo.h6">Your Application Status</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudStack Spacing="4">
                    <MudChip T="string" 
                           Color="@(myApplication.Status == "Accepted" ? Color.Success : 
                                     myApplication.Status == "Rejected" ? Color.Error : 
                                     myApplication.Status == "UnderReview" ? Color.Warning : 
                                     Color.Info)">
                        @myApplication.Status
                    </MudChip>
                    <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400">
                        Submitted on @myApplication.SubmittedAt?.ToString("MMMM dd, yyyy")
                    </MudText>
                    
                    @if (!string.IsNullOrEmpty(myApplication.ReviewerNotes))
                    {
                        <MudPaper Class="p-4 bg-gray-50 dark:bg-gray-800" Elevation="0">
                            <MudText Typo="Typo.subtitle2" Class="mb-2">Notes from Admissions Office:</MudText>
                            <MudText Typo="Typo.body2">@myApplication.ReviewerNotes</MudText>
                        </MudPaper>
                    }
                    
                    <MudStack Row Spacing="3" Class="mt-6">
                        <MudButton Variant="Variant.Outlined" 
                                 Color="Color.Primary" 
                                 StartIcon="@Icons.Material.Filled.Edit"
                                 OnClick="EditApplication">
                            Edit Application
                        </MudButton>
                        <MudButton Variant="Variant.Outlined" 
                                 Color="Color.Secondary" 
                                 StartIcon="@Icons.Material.Filled.RemoveRedEye"
                                 OnClick="ViewFullApplication">
                            View Full Application
                        </MudButton>
                    </MudStack>
                </MudStack>
            </MudCardContent>
        </MudCard>
    }
    else
    {
        <!-- Application Form -->
        <MudCard Elevation="2">
            <MudCardContent>
                <EditForm Model="applicationModel" OnValidSubmit="SubmitApplication">
                    <DataAnnotationsValidator />

                    <!-- Progress Indicator -->
                    <MudStepper @ref="stepper" ActiveIndex="@(currentStep - 1)" Class="mb-8">
                        <MudStep Title="Personal Info" Icon="@Icons.Material.Filled.Person" />
                        <MudStep Title="Academic History" Icon="@Icons.Material.Filled.School" />
                        <MudStep Title="Program Selection" Icon="@Icons.Material.Filled.Book" />
                        <MudStep Title="Documents" Icon="@Icons.Material.Filled.AttachFile" />
                        <MudStep Title="Review & Submit" Icon="@Icons.Material.Filled.CheckCircle" />
                    </MudStepper>

                <!-- Step 1: Personal Information -->
                @if (currentStep == 1)
                {
                    <MudPaper Class="p-6" Elevation="0">
                        <MudText Typo="Typo.h5" Class="font-semibold text-gray-900 dark:text-gray-100 mb-6">Personal Information</MudText>
                        <MudGrid Spacing="4">
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="applicationModel.FirstName" 
                                            Label="First Name" 
                                            Variant="Variant.Outlined" 
                                            Required="true"
                                            For="@(() => applicationModel.FirstName)" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="applicationModel.LastName" 
                                            Label="Last Name" 
                                            Variant="Variant.Outlined" 
                                            Required="true"
                                            For="@(() => applicationModel.LastName)" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="applicationModel.Email" 
                                            Label="Email Address" 
                                            InputType="InputType.Email"
                                            Variant="Variant.Outlined" 
                                            Required="true"
                                            For="@(() => applicationModel.Email)" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="applicationModel.PhoneNumber" 
                                            Label="Phone Number" 
                                            Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudDatePicker @bind-Date="applicationModel.DateOfBirth" 
                                             Label="Date of Birth"
                                             Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudSelect @bind-Value="applicationModel.Gender" 
                                         Label="Gender" 
                                         Variant="Variant.Outlined">
                                    <MudSelectItem Value="@("")">Select Gender</MudSelectItem>
                                    <MudSelectItem Value="@("Male")">Male</MudSelectItem>
                                    <MudSelectItem Value="@("Female")">Female</MudSelectItem>
                                    <MudSelectItem Value="@("Other")">Other</MudSelectItem>
                                    <MudSelectItem Value="@("PreferNotToSay")">Prefer not to say</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <MudTextField @bind-Value="applicationModel.Address" 
                                            Label="Address" 
                                            Variant="Variant.Outlined" 
                                            Lines="3" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                }

                <!-- Step 2: Academic History -->
                @if (currentStep == 2)
                {
                    <MudPaper Class="p-6" Elevation="0">
                        <MudText Typo="Typo.h5" Class="font-semibold text-gray-900 dark:text-gray-100 mb-6">Academic History</MudText>
                        <MudGrid Spacing="4">
                            <MudItem xs="12" md="6">
                                <MudSelect @bind-Value="applicationModel.EducationLevel" 
                                         Label="Highest Education Level" 
                                         Variant="Variant.Outlined"
                                         Required="true">
                                    <MudSelectItem Value="@("")">Select Education Level</MudSelectItem>
                                    <MudSelectItem Value="@("HighSchool")">High School</MudSelectItem>
                                    <MudSelectItem Value="@("Associate")">Associate Degree</MudSelectItem>
                                    <MudSelectItem Value="@("Bachelor")">Bachelor's Degree</MudSelectItem>
                                    <MudSelectItem Value="@("Master")">Master's Degree</MudSelectItem>
                                    <MudSelectItem Value="@("Doctorate")">Doctorate</MudSelectItem>
                                </MudSelect>
                                <ValidationMessage For="() => applicationModel.EducationLevel" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudNumericField T="double?" @bind-Value="applicationModel.GPA" 
                                               Label="GPA (if applicable)" 
                                               Variant="Variant.Outlined"
                                               Step="0.01" 
                                               Min="0" 
                                               Max="4" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="applicationModel.PreviousInstitution" 
                                            Label="Previous Institution" 
                                            Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="applicationModel.FieldOfStudy" 
                                            Label="Field of Study" 
                                            Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12">
                                <MudNumericField @bind-Value="applicationModel.GraduationYear" 
                                               Label="Graduation Year" 
                                               Variant="Variant.Outlined"
                                               Min="1950" 
                                               Max="2030" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                }

                <!-- Step 3: Program Selection -->
                @if (currentStep == 3)
                {
                    <MudPaper Class="p-6" Elevation="0">
                        <MudText Typo="Typo.h5" Class="font-semibold text-gray-900 dark:text-gray-100 mb-6">Program Selection</MudText>
                        
                        @if (availablePrograms?.Any() == true)
                        {
                            <MudGrid Spacing="4" Class="mb-8">
                                @foreach (var program in availablePrograms)
                                {
                                    <MudItem xs="12" md="6">
                                        <MudCard Outlined="true" 
                                               Class="@($"cursor-pointer transition-all duration-200 {(applicationModel.PreferredProgram == program.Id ? "border-2 border-primary bg-primary-50 dark:bg-primary-900/20" : "hover:shadow-md")}")"
                                               @onclick="() => SelectProgram(program.Id)">
                                            <MudCardContent>
                                                <MudText Typo="Typo.h6" Class="font-semibold mb-2">@program.Name</MudText>
                                                <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400 mb-4">@program.Description</MudText>
                                                <MudStack Row Spacing="4" Class="text-sm">
                                                    <MudChip T="string" Color="Color.Info" Size="Size.Small">@program.Department</MudChip>
                                                    <MudChip T="string" Color="Color.Secondary" Size="Size.Small">@program.DurationMonths months</MudChip>
                                                </MudStack>
                                            </MudCardContent>
                                        </MudCard>
                                    </MudItem>
                                }
                            </MudGrid>
                        }
                        
                        <MudGrid Spacing="4">
                            <MudItem xs="12" md="6">
                                <MudSelect @bind-Value="applicationModel.IntendedStartDate" 
                                         Label="Intended Start Date" 
                                         Variant="Variant.Outlined"
                                         Required="true">
                                    <MudSelectItem Value="@("")">Select Start Date</MudSelectItem>
                                    <MudSelectItem Value="@("Fall2024")">Fall 2024</MudSelectItem>
                                    <MudSelectItem Value="@("Spring2025")">Spring 2025</MudSelectItem>
                                    <MudSelectItem Value="@("Summer2025")">Summer 2025</MudSelectItem>
                                    <MudSelectItem Value="@("Fall2025")">Fall 2025</MudSelectItem>
                                </MudSelect>
                                <ValidationMessage For="() => applicationModel.IntendedStartDate" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudSelect @bind-Value="applicationModel.StudyMode" 
                                         Label="Study Mode" 
                                         Variant="Variant.Outlined"
                                         Required="true">
                                    <MudSelectItem Value="@("")">Select Study Mode</MudSelectItem>
                                    <MudSelectItem Value="@("FullTime")">Full-time</MudSelectItem>
                                    <MudSelectItem Value="@("PartTime")">Part-time</MudSelectItem>
                                    <MudSelectItem Value="@("Online")">Online</MudSelectItem>
                                    <MudSelectItem Value="@("Hybrid")">Hybrid</MudSelectItem>
                                </MudSelect>
                                <ValidationMessage For="() => applicationModel.StudyMode" />
                            </MudItem>
                            <MudItem xs="12">
                                <MudTextField @bind-Value="applicationModel.PersonalStatement" 
                                            Label="Personal Statement" 
                                            HelperText="Tell us about yourself, your goals, and why you want to join our program."
                                            Variant="Variant.Outlined" 
                                            Lines="6" 
                                            Placeholder="Share your story, motivations, and aspirations..." />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                }

                <!-- Step 4: Documents -->
                @if (currentStep == 4)
                {
                    <MudPaper Class="p-6" Elevation="0">
                        <MudText Typo="Typo.h5" Class="font-semibold mb-2">Required Documents</MudText>
                        <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400 mb-6">Please upload the following documents to complete your application:</MudText>
                        
                        <MudStack Spacing="6">
                            <MudCard Outlined="true">
                                <MudCardContent>
                                    <MudStack Row AlignItems="AlignItems.Center" Spacing="4">
                                        <MudStack Class="flex-1" Spacing="1">
                                            <MudText Typo="Typo.h6">Official Transcript *</MudText>
                                            <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400">Upload your official academic transcript</MudText>
                                        </MudStack>
                                        <MudStack AlignItems="AlignItems.End" Spacing="2">
                                            <InputFile OnChange="@((e) => OnDocumentFileSelected(e, "Transcript"))" accept=".pdf,.doc,.docx" class="hidden" id="transcript-upload" />
                                            <MudButton Variant="Variant.Outlined" 
                                                     Color="Color.Primary" 
                                                     StartIcon="@Icons.Material.Filled.Upload"
                                                     HtmlTag="label"
                                                     for="transcript-upload">
                                                Choose File
                                            </MudButton>
                                            @if (uploadedDocuments.ContainsKey("Transcript"))
                                            {
                                                <MudChip T="string" Color="Color.Success" Icon="@Icons.Material.Filled.CheckCircle">
                                                    @uploadedDocuments["Transcript"].OriginalFileName
                                                </MudChip>
                                            }
                                        </MudStack>
                                    </MudStack>
                                </MudCardContent>
                            </MudCard>
                            
                            <MudCard Outlined="true">
                                <MudCardContent>
                                    <MudStack Row AlignItems="AlignItems.Center" Spacing="4">
                                        <MudStack Class="flex-1" Spacing="1">
                                            <MudText Typo="Typo.h6">Resume/CV</MudText>
                                            <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400">Upload your current resume or curriculum vitae</MudText>
                                        </MudStack>
                                        <MudStack AlignItems="AlignItems.End" Spacing="2">
                                            <InputFile OnChange="@((e) => OnDocumentFileSelected(e, "Resume"))" accept=".pdf,.doc,.docx" class="hidden" id="resume-upload" />
                                            <MudButton Variant="Variant.Outlined" 
                                                     Color="Color.Primary" 
                                                     StartIcon="@Icons.Material.Filled.Upload"
                                                     HtmlTag="label"
                                                     for="resume-upload">
                                                Choose File
                                            </MudButton>
                                            @if (uploadedDocuments.ContainsKey("Resume"))
                                            {
                                                <MudChip T="string" Color="Color.Success" Icon="@Icons.Material.Filled.CheckCircle">
                                                    @uploadedDocuments["Resume"].OriginalFileName
                                                </MudChip>
                                            }
                                        </MudStack>
                                    </MudStack>
                                </MudCardContent>
                            </MudCard>
                            
                            <MudCard Outlined="true">
                                <MudCardContent>
                                    <MudStack Row AlignItems="AlignItems.Center" Spacing="4">
                                        <MudStack Class="flex-1" Spacing="1">
                                            <MudText Typo="Typo.h6">Letter of Recommendation</MudText>
                                            <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400">Upload at least one letter of recommendation</MudText>
                                        </MudStack>
                                        <MudStack AlignItems="AlignItems.End" Spacing="2">
                                            <InputFile OnChange="@((e) => OnDocumentFileSelected(e, "Recommendation"))" accept=".pdf,.doc,.docx" class="hidden" id="recommendation-upload" />
                                            <MudButton Variant="Variant.Outlined" 
                                                     Color="Color.Primary" 
                                                     StartIcon="@Icons.Material.Filled.Upload"
                                                     HtmlTag="label"
                                                     for="recommendation-upload">
                                                Choose File
                                            </MudButton>
                                            @if (uploadedDocuments.ContainsKey("Recommendation"))
                                            {
                                                <MudChip T="string" Color="Color.Success" Icon="@Icons.Material.Filled.CheckCircle">
                                                    @uploadedDocuments["Recommendation"].OriginalFileName
                                                </MudChip>
                                            }
                                        </MudStack>
                                    </MudStack>
                                </MudCardContent>
                            </MudCard>
                        </MudStack>
                    </MudPaper>
                }

                <!-- Step 5: Review & Submit -->
                @if (currentStep == 5)
                {
                    <MudPaper Class="p-6" Elevation="0">
                        <MudText Typo="Typo.h5" Class="font-semibold text-gray-900 dark:text-gray-100 mb-2">Review Your Application</MudText>
                        <MudText Typo="Typo.body2" Class="text-gray-600 dark:text-gray-400 mb-6">Please review all information before submitting your application.</MudText>
                        
                        <MudStack Spacing="4">
                            <MudCard Outlined="true">
                                <MudCardHeader>
                                    <MudText Typo="Typo.h6" Class="font-semibold">Personal Information</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudGrid Spacing="3">
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Name:</strong> @applicationModel.FirstName @applicationModel.LastName</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Email:</strong> @applicationModel.Email</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Phone:</strong> @applicationModel.PhoneNumber</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Date of Birth:</strong> @applicationModel.DateOfBirth?.ToString("MM/dd/yyyy")</MudText>
                                        </MudItem>
                                    </MudGrid>
                                </MudCardContent>
                            </MudCard>
                            
                            <MudCard Outlined="true">
                                <MudCardHeader>
                                    <MudText Typo="Typo.h6" Class="font-semibold">Academic Background</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudGrid Spacing="3">
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Education:</strong> @applicationModel.EducationLevel</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>GPA:</strong> @applicationModel.GPA</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Institution:</strong> @applicationModel.PreviousInstitution</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Field:</strong> @applicationModel.FieldOfStudy</MudText>
                                        </MudItem>
                                    </MudGrid>
                                </MudCardContent>
                            </MudCard>
                            
                            <MudCard Outlined="true">
                                <MudCardHeader>
                                    <MudText Typo="Typo.h6" Class="font-semibold">Program Selection</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudGrid Spacing="3">
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Program:</strong> @GetProgramName(applicationModel.PreferredProgram)</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Start Date:</strong> @applicationModel.IntendedStartDate</MudText>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudText Typo="Typo.body2"><strong>Study Mode:</strong> @applicationModel.StudyMode</MudText>
                                        </MudItem>
                                    </MudGrid>
                                </MudCardContent>
                            </MudCard>
                            
                            <MudCard Outlined="true">
                                <MudCardHeader>
                                    <MudText Typo="Typo.h6" Class="font-semibold">Uploaded Documents</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    @if (uploadedDocuments.Any())
                                    {
                                        <MudStack Spacing="2">
                                            @foreach (var doc in uploadedDocuments)
                                            {
                                                <MudChip T="string" Color="Color.Info" Icon="@Icons.Material.Filled.AttachFile">
                                                    @doc.Key: @doc.Value.OriginalFileName
                                                </MudChip>
                                            }
                                        </MudStack>
                                    }
                                    else
                                    {
                                        <MudText Typo="Typo.body2" Class="text-gray-500 dark:text-gray-400">No documents uploaded</MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        </MudStack>
                        
                        <MudPaper Class="p-4 mt-6 bg-gray-50 dark:bg-gray-800" Elevation="0">
                            <MudCheckBox @bind-Value="agreeToTerms" Color="Color.Primary">
                                I agree to the <MudLink Href="/terms" Target="_blank">Terms and Conditions</MudLink> and 
                                <MudLink Href="/privacy" Target="_blank">Privacy Policy</MudLink>
                            </MudCheckBox>
                        </MudPaper>
                    </MudPaper>
                }

                <!-- Navigation Buttons -->
                <MudPaper Class="p-6 mt-6" Elevation="0">
                    <MudStack Row AlignItems="AlignItems.Center" JustifyContent="Justify.SpaceBetween">
                        @if (currentStep > 1)
                        {
                            <MudButton Variant="Variant.Outlined" 
                                     Color="Color.Secondary" 
                                     StartIcon="@Icons.Material.Filled.ArrowBack"
                                     OnClick="PreviousStep">
                                Previous
                            </MudButton>
                        }
                        else
                        {
                            <MudSpacer />
                        }
                        
                        @if (currentStep < 5)
                        {
                            <MudButton Variant="Variant.Filled" 
                                     Color="Color.Primary" 
                                     EndIcon="@Icons.Material.Filled.ArrowForward"
                                     OnClick="NextStep">
                                Next
                            </MudButton>
                        }
                        else
                        {
                            <MudButton ButtonType="ButtonType.Submit" 
                                     Variant="Variant.Filled" 
                                     Color="Color.Success"
                                     StartIcon="@(isSubmitting ? null : Icons.Material.Filled.Send)"
                                     Disabled="@(!agreeToTerms || isSubmitting)">
                                @if (isSubmitting)
                                {
                                    <MudProgressCircular Color="Color.Default" Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                    <MudText>Submitting...</MudText>
                                }
                                else
                                {
                                    <MudText>Submit Application</MudText>
                                }
                            </MudButton>
                        }
                    </MudStack>
                </MudPaper>
            </EditForm>
        </MudCardContent>
        </MudCard>
    }
</MudContainer>

@code {
    private AdmissionApplicationDto applicationModel = new();
    private AdmissionApplicationDto? myApplication;
    private List<ProgramDto>? availablePrograms;
    private Dictionary<string, ApplicationDocumentDto> uploadedDocuments = new();
    
    private int currentStep = 1;
    private bool agreeToTerms = false;
    private bool isSubmitting = false;
    private bool showSuccess = false;
    private MudStepper? stepper;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadPrograms();
            await LoadExistingApplication();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private async Task LoadPrograms()
    {
        try
        {
            availablePrograms = await AdmissionsRepository.GetAvailableProgramsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading programs: {ex.Message}");
        }
    }

    private Task LoadExistingApplication()
    {
        try
        {
            // This would need to be implemented in the repository
            // myApplication = await AdmissionsRepository.GetMyApplicationAsync();
            return Task.CompletedTask;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading application: {ex.Message}");
            return Task.FromException(ex);
        }
    }

    private void NextStep()
    {
        if (currentStep < 5)
        {
            currentStep++;
        }
    }

    private void PreviousStep()
    {
        if (currentStep > 1)
        {
            currentStep--;
        }
    }

    private void SelectProgram(string programId)
    {
        applicationModel.PreferredProgram = programId;
    }

    private async Task OnDocumentFileSelected(InputFileChangeEventArgs e, string documentType)
    {
        var file = e.File;
        if (file != null)
        {
            try
            {
                using var stream = file.OpenReadStream();
                var result = await FileRepository.UploadFileAsync(stream, file.Name, file.ContentType, "admissions");
                
                if (result.Success)
                {
                    uploadedDocuments[documentType] = new ApplicationDocumentDto
                    {
                        OriginalFileName = file.Name,
                        FilePath = result.FilePath ?? "",
                        DocumentType = documentType
                    };
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error uploading file: {ex.Message}");
            }
        }
    }

    private async Task SubmitApplication()
    {
        if (!agreeToTerms) return;

        isSubmitting = true;
        try
        {
            applicationModel.Status = "Submitted";
            applicationModel.SubmittedAt = DateTime.UtcNow;
            
            var applicationId = await AdmissionsRepository.SubmitApplicationAsync(applicationModel);
            
            // Upload documents
            foreach (var doc in uploadedDocuments)
            {
                await AdmissionsRepository.UploadDocumentAsync(applicationId, doc.Value.OriginalFileName, 
                    doc.Value.FilePath, doc.Value.DocumentType);
            }
            
            showSuccess = true;
            currentStep = 1;
            applicationModel = new();
            uploadedDocuments.Clear();
            agreeToTerms = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error submitting application: {ex.Message}");
            await JS.InvokeVoidAsync("alert", "There was an error submitting your application. Please try again.");
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void EditApplication()
    {
        if (myApplication != null)
        {
            applicationModel = myApplication;
            myApplication = null;
            currentStep = 1;
        }
    }

    private void ViewFullApplication()
    {
        // Navigate to a detailed view
        Navigation.NavigateTo("/application/view");
    }

    private string GetProgramName(string? programId)
    {
        if (string.IsNullOrEmpty(programId) || availablePrograms == null)
            return "Not selected";
            
        var program = availablePrograms.FirstOrDefault(p => p.Id == programId);
        return program?.Name ?? "Unknown Program";
    }

    private string GetStatusClass(string status)
    {
        return status switch
        {
            "Submitted" => "submitted",
            "UnderReview" => "under-review",
            "Accepted" => "accepted",
            "Rejected" => "rejected",
            "Waitlisted" => "waitlisted",
            _ => "draft"
        };
    }
}



