@page "/home"
@page "/"

@layout LMS.Web.Components.Pages.User.Shared.SharedPagesLayout
@inject NavigationManager NavigationManager
@inject UserManager<User> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using LMS.Data.Entities
@using LMS.Web.Components.Account
@rendermode InteractiveServer
<PageTitle>Home</PageTitle>

@if (isLoading)
{
    <div class="p-6">
        <div class="max-w-7xl mx-auto">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div class="flex flex-col gap-3">
                    @for (int i = 0; i < 6; i++)
                    {
                        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="60px" Class="mb-3 rounded-lg" />
                    }
                </div>
                <div class="flex flex-col">
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="400px" Class="mb-4 flex-grow rounded-lg" />
                </div>
                <div class="flex flex-col">
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="400px" Class="w-full rounded-lg" />
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="max-w-7xl mx-auto px-2 md:px-4 py-6">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Quick Links -->
            <div class="flex flex-col gap-4">
                <MudCard Elevation="2"
                    Class="rounded-2xl shadow bg-white dark:bg-gray-900 hover:shadow-lg transition cursor-pointer">
                    <MudCardContent Class="flex flex-col gap-2 p-4">
                        <MudLink Href="/user/lms/dashboard" Class="flex items-center gap-2 group"
                            Style="text-decoration:none;">
                            <MudIcon Icon="@Icons.Material.Filled.Dashboard"
                                Class="text-primary text-2xl group-hover:scale-110 transition" />
                            <MudText>Dashboard</MudText>
                        </MudLink>
                        <MudLink Href="/user/lms/forums" Class="flex items-center gap-2 group"
                            Style="text-decoration:none;">
                            <MudIcon Icon="@Icons.Material.Filled.Forum"
                                Class="text-success text-2xl group-hover:scale-110 transition" />
                            <MudText>Forums</MudText>
                        </MudLink>
                        <MudLink Href="/user/lms/analytics" Class="flex items-center gap-2 group"
                            Style="text-decoration:none;">
                            <MudIcon Icon="@Icons.Material.Filled.Analytics"
                                Class="text-info text-2xl group-hover:scale-110 transition" />
                            <MudText>Analytics</MudText>
                        </MudLink>
                        <MudLink Href="/user/lms/my-courses" Class="flex items-center gap-2 group"
                            Style="text-decoration:none;">
                            <MudIcon Icon="@Icons.Material.Filled.School"
                                Class="text-warning text-2xl group-hover:scale-110 transition" />
                            <MudText>My Courses</MudText>
                        </MudLink>
                    </MudCardContent>
                </MudCard>
            </div>
            <!-- Announcements -->
            <div class="flex flex-col gap-4">
                <MudCard Elevation="2" Class="flex-grow flex flex-col rounded-2xl shadow bg-white dark:bg-gray-900">
                    <MudCardHeader Class="bg-primary text-white flex items-center justify-between rounded-t-2xl px-4 py-2">
                        <MudText Typo="Typo.h6" Class="flex items-center">
                            <MudIcon Icon="@Icons.Material.Filled.Campaign" Class="mr-2" /> Announcements
                        </MudText>
                        <MudButton Variant="Variant.Text" Color="Color.Inherit" Size="Size.Small"
                            Href="/user/lms/announcement-list" Style="text-decoration: none;">
                            View All
                        </MudButton>
                    </MudCardHeader>
                    <MudCardContent Class="p-0 flex-grow flex flex-col hide-scrollbar"
                        Style="max-height: 80svh; overflow-y: auto;">
                        <Announcements />
                    </MudCardContent>
                </MudCard>
            </div>
            <!-- Course Search -->
            <div class="flex flex-col gap-4">
                <MudCard Elevation="2" Class="rounded-2xl shadow bg-white dark:bg-gray-900">
                    <MudCardContent Class="p-4">
                        <CourseListSearch User="currentUser" />
                    </MudCardContent>
                </MudCard>
            </div>
        </div>
    </div>
}

@code {
    private bool isLoading = true;
    private UserModel? currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);
        if (user is not null)
        {
            var userName = user.UserName ?? string.Empty;
            currentUser = new UserModel { UserName = userName };
        }
        isLoading = false;
    }
}